<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- notice Camel will only update the routes that has been changed -->

    <!-- Properties are loaded from nitra-camel.properties both for beans and for camel routes by {{a.b.c}} -->
    <bean id="propHolder" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:nitra-camel.properties</value>
            </list>
        </property>
    </bean>


    <bean id="maxGapProcessor" class="org.apache.camel.example.reload.MaxGapProcessor">
        <property name="date" value="${maxGapProcessor.transactionDate}"/>
        <property name="maxGapInSeconds" value="${maxGapProcessor.maxGapInSeconds}"/>

    </bean>

    <bean id="dataUsageProcessor" class="org.apache.camel.example.reload.DataUsageProcessor">
        <property name="bytesPerTransaction" value="${dataUsage.bytesPerTransaction}"/>

    </bean>

    <bean id="accessoryOrderProcessor" class="org.apache.camel.example.reload.AccessoryOrderProcessor">
        <property name="paperPerTrx" value="14"/>
    </bean>

    <bean id="jiraProcessor" class="org.apache.camel.example.reload.JiraProcessor">
    </bean>

    <!-- processor to retrive data from Jasper -->
    <bean id="jasperProcessor" class="org.apache.camel.example.reload.JasperProcessor">
        <constructor-arg index="0" value="${jasper.url}"/>
        <constructor-arg index="1" value="${jasper.username}"/>
        <constructor-arg index="2" value="${jasper.password}"/>
        <constructor-arg index="3" value="${jasper.license.key}"/>
    </bean>

    <!-- This is our aggregation strategy for terminals and transactions -->
    <bean id="csvAggregationStrategy" class="org.apache.camel.example.reload.CsvAggregationStrategy"/>


    <import resource="jasperRoute.xml"/>
    <import resource="jiraRoute.xml"/>
    <import resource="maxGapRoute.xml"/>
    <import resource="dataUsageRoute.xml"/>

    <camelContext id="camel_xml_dsl" xmlns="http://camel.apache.org/schema/spring">
        <propertyPlaceholder id="properties" location="classpath:nitra-camel.properties"/>
        <routeContextRef ref="jasperContext"/>
        <routeContextRef ref="jiraContext"/>
        <routeContextRef ref="maxGapContext"/>
        <routeContextRef ref="dataUsageContext"/>
    </camelContext>

</beans>
